!function(r){r.fn.navList=function(){var t=r(this);return $a=t.find("a"),b=[],$a.each(function(){var t=r(this),e=Math.max(0,t.parents("li").length-1),a=t.attr("href"),l=t.attr("target");b.push('<a class="link depth-'+e+'"'+(void 0!==l&&""!=l?' target="'+l+'"':"")+(void 0!==a&&""!=a?' href="'+a+'"':"")+'><span class="indent-'+e+'"></span>'+t.text()+"</a>")}),b.join("")},r.fn.panel=function(t){if(0==this.length)return s;if(1<this.length){for(var e=0;e<this.length;e++)r(this[e]).panel(t);return s}var n,s=r(this),a=r("body"),l=r(window),i=s.attr("id");return"jQuery"!=typeof(n=r.extend({delay:0,hideOnClick:!1,hideOnEscape:!1,hideOnSwipe:!1,resetScroll:!1,resetForms:!1,side:null,target:s,visibleClass:"visible"},t)).target&&(n.target=r(n.target)),s._hide=function(t){n.target.hasClass(n.visibleClass)&&(t&&(t.preventDefault(),t.stopPropagation()),n.target.removeClass(n.visibleClass),window.setTimeout(function(){n.resetScroll&&s.scrollTop(0),n.resetForms&&s.find("form").each(function(){this.reset()})},n.delay))},s.css("-ms-overflow-style","-ms-autohiding-scrollbar").css("-webkit-overflow-scrolling","touch"),n.hideOnClick&&(s.find("a").css("-webkit-tap-highlight-color","rgba(0,0,0,0)"),s.on("click","a",function(t){var e=r(this),a=e.attr("href"),l=e.attr("target");a&&"#"!=a&&""!=a&&a!="#"+i&&(t.preventDefault(),t.stopPropagation(),s._hide(),window.setTimeout(function(){"_blank"==l?window.open(a):window.location.href=a},n.delay+10))})),s.on("touchstart",function(t){s.touchPosX=t.originalEvent.touches[0].pageX,s.touchPosY=t.originalEvent.touches[0].pageY}),s.on("touchmove",function(t){if(null!==s.touchPosX&&null!==s.touchPosY){var e=s.touchPosX-t.originalEvent.touches[0].pageX,a=s.touchPosY-t.originalEvent.touches[0].pageY,l=s.outerHeight(),i=s.get(0).scrollHeight-s.scrollTop();if(n.hideOnSwipe){var r=!1,o=20;switch(n.side){case"left":r=a<o&&-20<a&&50<e;break;case"right":r=a<o&&-20<a&&e<-50;break;case"top":r=e<o&&-20<e&&50<a;break;case"bottom":r=e<o&&-20<e&&a<-50}if(r)return s.touchPosX=null,s.touchPosY=null,s._hide(),!1}(s.scrollTop()<0&&a<0||l-2<i&&i<l+2&&0<a)&&(t.preventDefault(),t.stopPropagation())}}),s.on("click touchend touchstart touchmove",function(t){t.stopPropagation()}),s.on("click",'a[href="#'+i+'"]',function(t){t.preventDefault(),t.stopPropagation(),n.target.removeClass(n.visibleClass)}),a.on("click touchend",function(t){s._hide(t)}),a.on("click",'a[href="#'+i+'"]',function(t){t.preventDefault(),t.stopPropagation(),n.target.toggleClass(n.visibleClass)}),n.hideOnEscape&&l.on("keydown",function(t){27==t.keyCode&&s._hide(t)}),s},r.fn.placeholder=function(){if(void 0!==document.createElement("input").placeholder)return r(this);if(0==this.length)return e;if(1<this.length){for(var t=0;t<this.length;t++)r(this[t]).placeholder();return e}var e=r(this);return e.find("input[type=text],textarea").each(function(){var t=r(this);""!=t.val()&&t.val()!=t.attr("placeholder")||t.addClass("polyfill-placeholder").val(t.attr("placeholder"))}).on("blur",function(){var t=r(this);t.attr("name").match(/-polyfill-field$/)||""==t.val()&&t.addClass("polyfill-placeholder").val(t.attr("placeholder"))}).on("focus",function(){var t=r(this);t.attr("name").match(/-polyfill-field$/)||t.val()==t.attr("placeholder")&&t.removeClass("polyfill-placeholder").val("")}),e.find("input[type=password]").each(function(){var a=r(this),l=r(r("<div>").append(a.clone()).remove().html().replace(/type="password"/i,'type="text"').replace(/type=password/i,"type=text"));""!=a.attr("id")&&l.attr("id",a.attr("id")+"-polyfill-field"),""!=a.attr("name")&&l.attr("name",a.attr("name")+"-polyfill-field"),l.addClass("polyfill-placeholder").val(l.attr("placeholder")).insertAfter(a),""==a.val()?a.hide():l.hide(),a.on("blur",function(t){t.preventDefault();var e=a.parent().find("input[name="+a.attr("name")+"-polyfill-field]");""==a.val()&&(a.hide(),e.show())}),l.on("focus",function(t){t.preventDefault();var e=l.parent().find("input[name="+l.attr("name").replace("-polyfill-field","")+"]");l.hide(),e.show().focus()}).on("keypress",function(t){t.preventDefault(),l.val("")})}),e.on("submit",function(){e.find("input[type=text],input[type=password],textarea").each(function(t){var e=r(this);e.attr("name").match(/-polyfill-field$/)&&e.attr("name",""),e.val()==e.attr("placeholder")&&(e.removeClass("polyfill-placeholder"),e.val(""))})}).on("reset",function(t){t.preventDefault(),e.find("select").val(r("option:first").val()),e.find("input,textarea").each(function(){var t,e=r(this);switch(e.removeClass("polyfill-placeholder"),this.type){case"submit":case"reset":break;case"password":e.val(e.attr("defaultValue")),t=e.parent().find("input[name="+e.attr("name")+"-polyfill-field]"),""==e.val()?(e.hide(),t.show()):(e.show(),t.hide());break;case"checkbox":case"radio":e.attr("checked",e.attr("defaultValue"));break;case"text":case"textarea":e.val(e.attr("defaultValue")),""==e.val()&&(e.addClass("polyfill-placeholder"),e.val(e.attr("placeholder")));break;default:e.val(e.attr("defaultValue"))}})}),e},r.prioritize=function(t,l){var i="__prioritize";"jQuery"!=typeof t&&(t=r(t)),t.each(function(){var t,e=r(this),a=e.parent();if(0!=a.length)if(e.data(i)){if(l)return;t=e.data(i),e.insertAfter(t),e.removeData(i)}else{if(!l)return;if(0==(t=e.prev()).length)return;e.prependTo(a),e.data(i,t)}})}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
